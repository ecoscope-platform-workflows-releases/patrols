id: patrols
requirements:
  - name: ecoscope-workflows-core
    version: "*"
    channel: file:///tmp/ecoscope-workflows/release/artifacts/
  - name: ecoscope-workflows-ext-ecoscope
    version: "*"
    channel: file:///tmp/ecoscope-workflows/release/artifacts/
rjsf-overrides:
  properties:
    Preprocess patrol observations.properties.set_patrol_traj_color_column.properties.var.oneOf: [
      {"const": "patrol_type", "title": "Patrol Type"},
      {"const": "patrol_status", "title": "Patrol Status"},
      {"const": "patrol_subject", "title": "Patrol Subject"},
      {"const": "patrol_serial_number", "title": "Patrol Serial Number"},
    ]
    Preprocess patrol observations.properties.set_patrol_traj_color_column.properties.var.description: "Select a category to color and differentiate patrol trajectories."
    Preprocess patrol observations.properties.set_patrol_traj_color_column.properties.var.title: "Category"
    Preprocess patrol observations.properties.set_patrol_traj_color_column.properties.var.default: "patrol_type"
    Patrol and Event Types.properties.er_patrol_types.properties.patrol_types.ecoscope:patrol_type: "properties.er_client_name.properties.data_source.properties.name"
    Patrol and Event Types.properties.patrol_events.properties.event_type.ecoscope:event_type: "properties.er_client_name.properties.data_source.properties.name"
  $defs:
    ValueGrouper.oneOf: [
      {"const": "patrol_serial_number", "title": "Patrol Serial Number"},
      {"const": "patrol_type", "title": "Patrol Type"},
    ]

workflow:
  - name: Workflow Details
    id: workflow_details
    task: set_workflow_details

  - name: Data Source
    id: er_client_name
    task: set_er_connection

  - name: Time Range
    id: time_range
    task: set_time_range
    partial:
      time_format: "%d %b %Y %H:%M:%S %Z"

  - title: Patrol and Event Types
    type: task-group
    description: >-
      Select the Patrol and Event types to be analyzed.
    tasks:
      - id: er_patrol_types
        task: set_patrol_types
      - id: er_patrol_status
        task: set_patrol_status
      - id: patrol_obs
        task: get_patrol_observations
        partial:
          client: ${{ workflow.er_client_name.return }}
          time_range: ${{ workflow.time_range.return }}
          patrol_type: ${{ workflow.er_patrol_types.return }}
          status: ${{ workflow.er_patrol_status.return }}
          include_patrol_details: true
          raise_on_empty: true
      - id: patrol_events
        task: get_patrol_events
        partial:
          client: ${{ workflow.er_client_name.return }}
          time_range: ${{ workflow.time_range.return }}
          patrol_type: ${{ workflow.er_patrol_types.return }}
          status: ${{ workflow.er_patrol_status.return }}
          truncate_to_time_range: true
          raise_on_empty: true

  # set 'global' groupers
  - name: Group Data
    id: groupers
    task: set_groupers

  # fetch & process patrol observations
  - title: Preprocess patrol observations
    type: task-group
    description: >-
      Preprocess patrol observations from EarthRanger.
    tasks:
      - name: Transform Observations to Relocations
        id: patrol_reloc
        task: process_relocations
        partial:
          observations: ${{ workflow.patrol_obs.return }}
          relocs_columns: [
            "patrol_id",
            "patrol_start_time",
            "patrol_end_time",
            "patrol_type__value",
            "patrol_type__display",
            "patrol_serial_number",
            "patrol_status",
            "patrol_subject",
            "groupby_col",
            "fixtime",
            "junk_status",
            "extra__source",
            "geometry",
          ]
          filter_point_coords: [
            {"x": 180.0, "y": 90.0},
            {"x": 0.0, "y": 0.0},
            {"x": 1.0, "y": 1.0},
          ]
      - name: Style Trajectory By Category
        id: set_patrol_traj_color_column
        task: set_string_var
      - name: Transform Relocations to Trajectories
        id: patrol_traj
        task: relocations_to_trajectory
        partial:
          relocations: ${{ workflow.patrol_reloc.return }}
      - name: Add temporal index to Patrol Trajectories
        id: traj_add_temporal_index
        task: add_temporal_index
        partial:
          df: ${{ workflow.patrol_traj.return }}
          time_col: "extra__patrol_start_time"
          groupers: ${{ workflow.groupers.return }}
          cast_to_datetime: true
          format: "mixed"
      - name: Rename value grouper columns for Trajectories
        id: traj_rename_grouper_columns
        task: map_columns
        partial:
          df: ${{ workflow.traj_add_temporal_index.return }}
          drop_columns: []
          retain_columns: []
          rename_columns:
            extra__patrol_type__value: "patrol_type"
            extra__patrol_serial_number: "patrol_serial_number"
            extra__patrol_status: "patrol_status"
            extra__patrol_subject: "patrol_subject"
      - name: Patrol Traj Colormap
        id: traj_colormap
        task: apply_color_map
        partial:
          df: ${{ workflow.traj_rename_grouper_columns.return }}
          colormap: ["#FF9600", "#F23B0E", "#A100CB", "#F04564", "#03421A", "#3089FF", "#E26FFF", "#8C1700", "#002960", "#FFD000", "#B62879", "#680078", "#005A56", "#0056C7", "#331878", "#E76826"]
          input_column_name: ${{ workflow.set_patrol_traj_color_column.return }}
          output_column_name: "patrol_traj_colormap"

  # fetch & process patrol events
  - title: Preprocess patrol events
    type: task-group
    description: >-
      Preprocess patrol events from EarthRanger.
    tasks:
      - name: Apply Coordinate Filter
        id: filter_patrol_events
        task: apply_reloc_coord_filter
        partial:
          df: ${{ workflow.patrol_events.return }}
          roi_gdf: null
          roi_name: null
      - name: Add temporal index to Patrol Events
        id: pe_add_temporal_index
        task: add_temporal_index
        partial:
          df: ${{ workflow.filter_patrol_events.return }}
          time_col: "patrol_start_time"
          groupers: ${{ workflow.groupers.return }}
          cast_to_datetime: true
          format: "mixed"
      - name: Patrol Events Colormap
        id: pe_colormap
        task: apply_color_map
        partial:
          df: ${{ workflow.pe_add_temporal_index.return }}
          input_column_name: "event_type"
          colormap: "tab20b"
          output_column_name: "event_type_colormap"

  - name: Cast Patrol Trajectory Columns
    id: patrol_traj_cols_to_string
    task: convert_column_values_to_string
    partial:
      df: ${{ workflow.traj_colormap.return }}
      columns: ["patrol_serial_number", "patrol_type"]

  - name: Cast Patrol Events Columns
    id: pe_cols_to_string
    task: convert_column_values_to_string
    partial:
      df: ${{ workflow.pe_colormap.return }}
      columns: ["patrol_serial_number", "patrol_type"]

  - name: Split Patrol Trajectories by Group
    id: split_patrol_traj_groups
    task: split_groups
    partial:
      df: ${{ workflow.patrol_traj_cols_to_string.return }}
      groupers: ${{ workflow.groupers.return }}

  - name: Split Patrol Events by Group
    id: split_pe_groups
    task: split_groups
    partial:
      df: ${{ workflow.pe_cols_to_string.return }}
      groupers: ${{ workflow.groupers.return }}

  # Set base maps
  - name: Base Maps
    id: base_map_defs
    task: set_base_maps

  - title: Patrol Events and Trajectories Map
    type: task-group
    description: >-
      Create a combined patrol trajectories and events map.
    tasks:
      # Rename columns for display
      - name: Rename patrol events columns for map tooltip display
        id: pe_rename_display_columns
        task: map_columns
        partial:
          drop_columns: []
          retain_columns: []
          rename_columns:
            patrol_serial_number: "Patrol Serial"
            serial_number: "Event Serial"
            event_type: "Event Type"
            time: "Event Time"
        mapvalues:
          argnames: df
          argvalues: ${{ workflow.split_pe_groups.return }}
      - name: Create map layers for each Patrols Events group
        id: patrol_events_map_layers
        task: create_point_layer
        partial:
          layer_style:
            fill_color_column: "event_type_colormap"
          legend: null
          tooltip_columns: ["Patrol Serial", "Event Serial", "Event Type", "Event Time"]
        mapvalues:
          argnames: geodataframe
          argvalues: ${{ workflow.pe_rename_display_columns.return }}
      - name: Format speed values for display
        id: speed_val_with_unit
        task: map_values_with_unit
        partial:
          input_column_name: "speed_kmhr"
          output_column_name: "speed_kmhr"
          original_unit: "km/h"
          new_unit: "km/h"
          decimal_places: 1
        mapvalues:
          argnames: df
          argvalues: ${{ workflow.split_patrol_traj_groups.return }}
      # Rename columns for display
      - name: Rename patrol traj columns for map tooltip display
        id: patrol_traj_rename_columns
        task: map_columns
        partial:
          drop_columns: []
          retain_columns: []
          rename_columns:
            patrol_serial_number: "Patrol Serial"
            extra__patrol_type__display: "Patrol Type"
            segment_start: "Start"
            timespan_seconds: "Duration (s)"
            speed_kmhr: "Speed (kph)"
        mapvalues:
          argnames: df
          argvalues: ${{ workflow.speed_val_with_unit.return }}
      - name: Create map layer for each Patrol Trajectories group
        id: patrol_traj_map_layers
        task: create_polyline_layer
        partial:
          layer_style:
            auto_highlight: false
            opacity: 1.0
            pickable: true
            get_color: null
            get_width: 3.0
            color_column: "patrol_traj_colormap"
            width_units: "pixels"
            cap_rounded: true
          legend:
            label_column: ${{ workflow.set_patrol_traj_color_column.return }}
            color_column: "patrol_traj_colormap"
          tooltip_columns: ["Patrol Serial", "Patrol Type", "Start", "Duration (s)", "Speed (kph)"]
        mapvalues:
          argnames: geodataframe
          argvalues: ${{ workflow.patrol_traj_rename_columns.return }}
      - name: Combine Trajectories and Patrol Events layers
        id: combined_traj_and_pe_map_layers
        task: groupbykey
        partial:
          iterables:
            - ${{ workflow.patrol_traj_map_layers.return }}
            - ${{ workflow.patrol_events_map_layers.return }}
      - name: Draw Ecomaps for each combined Trajectory and Patrol Events group
        id: traj_patrol_events_ecomap
        task: draw_ecomap
        partial:
          tile_layers: ${{ workflow.base_map_defs.return }}
          north_arrow_style:
            placement: "top-left"
          legend_style:
            placement: "bottom-right"
          static: false
          title: null
          max_zoom: 20
        mapvalues:
          argnames: geo_layers
          argvalues: ${{ workflow.combined_traj_and_pe_map_layers.return }}
      - name: Persist Patrols Ecomap as Text
        id: traj_pe_ecomap_html_urls
        task: persist_text
        partial:
          root_path: ${{ env.ECOSCOPE_WORKFLOWS_RESULTS }}
        mapvalues:
          argnames: text
          argvalues: ${{ workflow.traj_patrol_events_ecomap.return }}
      - name: Create Map Widgets for Patrol Events
        id: traj_pe_map_widgets_single_views
        task: create_map_widget_single_view
        partial:
          title: "Trajectories & Patrol Events Map"
        map:
          argnames: [view, data]
          argvalues: ${{ workflow.traj_pe_ecomap_html_urls.return }}
      - name: Merge EcoMap Widget Views
        id: traj_pe_grouped_map_widget
        task: merge_widget_views
        partial:
          widgets: ${{ workflow.traj_pe_map_widgets_single_views.return }}

  # Grouped single value widgets
  - title: Patrol Summary Statistics
    type: task-group
    description: >-
      Create a single value widget for various patrol statistics.
    tasks:
      - name: Calculate Total Patrols Per Group
        id: total_patrols
        task: dataframe_column_nunique
        partial:
          column_name: "extra__patrol_id"
        mapvalues:
          argnames: df
          argvalues: ${{ workflow.split_patrol_traj_groups.return }}
      - name: Create Single Value Widgets for Total Patrols Per Group
        id: total_patrols_sv_widgets
        task: create_single_value_widget_single_view
        partial:
          title: "Total Patrols"
          decimal_places: 1
        map:
          argnames: [view, data]
          argvalues: ${{ workflow.total_patrols.return }}
      - name: Merge per group Total Patrols SV widgets
        id: total_patrols_grouped_sv_widget
        task: merge_widget_views
        partial:
          widgets: ${{ workflow.total_patrols_sv_widgets.return }}
      - name: Calculate Total Patrol Time Per Group
        id: total_patrol_time
        task: dataframe_column_sum
        partial:
          column_name: "timespan_seconds"
        mapvalues:
          argnames: df
          argvalues: ${{ workflow.split_patrol_traj_groups.return }}
      - name: Convert total patrol time units
        id: total_patrol_time_converted
        task: with_unit
        partial:
          original_unit: "s"
          new_unit: "h"
        mapvalues:
          argnames: value
          argvalues: ${{ workflow.total_patrol_time.return }}
      - name: Create Single Value Widgets for Total Patrol Time Per Group
        id: total_patrol_time_sv_widgets
        task: create_single_value_widget_single_view
        partial:
          title: "Total Time"
          decimal_places: 1
        map:
          argnames: [view, data]
          argvalues: ${{ workflow.total_patrol_time_converted.return }}
      - name: Merge per group Total Patrol Time SV widgets
        id: patrol_time_grouped_widget
        task: merge_widget_views
        partial:
          widgets: ${{ workflow.total_patrol_time_sv_widgets.return }}
      - name: Calculate Total Distance Per Group
        id: total_patrol_dist
        task: dataframe_column_sum
        partial:
          column_name: "dist_meters"
        mapvalues:
          argnames: df
          argvalues: ${{ workflow.split_patrol_traj_groups.return }}
      - name: Convert total patrol distance units
        id: total_patrol_dist_converted
        task: with_unit
        partial:
          original_unit: "m"
          new_unit: "km"
        mapvalues:
          argnames: value
          argvalues: ${{ workflow.total_patrol_dist.return }}
      - name: Create Single Value Widgets for Total Distance Per Group
        id: total_patrol_dist_sv_widgets
        task: create_single_value_widget_single_view
        partial:
          title: "Total Distance"
          decimal_places: 1
        map:
          argnames: [view, data]
          argvalues: ${{ workflow.total_patrol_dist_converted.return }}
      - name: Merge per group Total Patrol Distance SV widgets
        id: patrol_dist_grouped_widget
        task: merge_widget_views
        partial:
          widgets: ${{ workflow.total_patrol_dist_sv_widgets.return }}
      - name: Calculate Average Speed Per Group
        id: avg_speed
        task: dataframe_column_mean
        partial:
          column_name: "speed_kmhr"
        mapvalues:
          argnames: df
          argvalues: ${{ workflow.split_patrol_traj_groups.return }}
      - name: Convert Average Speed units
        id: average_speed_converted
        task: with_unit
        partial:
          original_unit: "km/h"
          new_unit: "km/h"
        mapvalues:
          argnames: value
          argvalues: ${{ workflow.avg_speed.return }}
      - name: Create Single Value Widgets for Avg Speed Per Group
        id: avg_speed_sv_widgets
        task: create_single_value_widget_single_view
        partial:
          title: "Average Speed"
          decimal_places: 1
        map:
          argnames: [view, data]
          argvalues: ${{ workflow.average_speed_converted.return }}
      - name: Merge per group Avg Speed SV widgets
        id: avg_speed_grouped_widget
        task: merge_widget_views
        partial:
          widgets: ${{ workflow.avg_speed_sv_widgets.return }}
      - name: Calculate Max Speed Per Group
        id: max_speed
        task: dataframe_column_max
        partial:
          column_name: "speed_kmhr"
        mapvalues:
          argnames: df
          argvalues: ${{ workflow.split_patrol_traj_groups.return }}
      - name: Convert Max Speed units
        id: max_speed_converted
        task: with_unit
        partial:
          original_unit: "km/h"
          new_unit: "km/h"
        mapvalues:
          argnames: value
          argvalues: ${{ workflow.max_speed.return }}
      - name: Create Single Value Widgets for Max Speed Per Group
        id: max_speed_sv_widgets
        task: create_single_value_widget_single_view
        partial:
          title: "Max Speed"
          decimal_places: 1
        map:
          argnames: [view, data]
          argvalues: ${{ workflow.max_speed_converted.return }}
      - name: Merge per group Max Speed SV widgets
        id: max_speed_grouped_widget
        task: merge_widget_views
        partial:
          widgets: ${{ workflow.max_speed_sv_widgets.return }}

  # patrol events bar chart
  - title: Patrol events bar chart
    type: task-group
    description: >-
      Create the patrol events bar chart.
    tasks:
      - name: Draw Time Series Bar Chart for Patrols Events
        id: patrol_events_bar_chart
        task: draw_time_series_bar_chart
        partial:
          x_axis: "time"
          y_axis: "event_type"
          category: "event_type"
          agg_function: "count"
          color_column: "event_type_colormap"
          plot_style:
            xperiodalignment: "middle"
          grouped_styles: null
          layout_style: null
        mapvalues:
          argnames: dataframe
          argvalues: ${{ workflow.split_pe_groups.return }}
      - name: Persist Patrols Bar Chart as Text
        id: patrol_events_bar_chart_html_url
        task: persist_text
        partial:
          root_path: ${{ env.ECOSCOPE_WORKFLOWS_RESULTS }}
        mapvalues:
          argnames: text
          argvalues: ${{ workflow.patrol_events_bar_chart.return }}
      - name: Create Plot Widget for Patrol Events
        id: patrol_events_bar_chart_widget
        task: create_plot_widget_single_view
        partial:
          title: "Patrol Events Bar Chart"
        map:
          argnames: [view, data]
          argvalues: ${{ workflow.patrol_events_bar_chart_html_url.return }}
      - name: Merge Bar Plot Widget Views
        id: grouped_bar_plot_widget_merge
        task: merge_widget_views
        partial:
          widgets: ${{ workflow.patrol_events_bar_chart_widget.return }}

  #patrol events pie chart
  - title: Patrol events pie chart
    type: task-group
    description: >-
      Create the patrol events pie chart.
    tasks:
      - name: Draw Pie Chart for Patrols Events
        id: patrol_events_pie_chart
        task: draw_pie_chart
        partial:
          value_column: "event_type"
          plot_style:
            textinfo: "value"
          label_column: null
          color_column: "event_type_colormap"
          layout_style: null
        mapvalues:
          argnames: dataframe
          argvalues: ${{ workflow.split_pe_groups.return }}
      - name: Persist Patrols Pie Chart as Text
        id: pe_pie_chart_html_urls
        task: persist_text
        partial:
          root_path: ${{ env.ECOSCOPE_WORKFLOWS_RESULTS }}
        mapvalues:
          argnames: text
          argvalues: ${{ workflow.patrol_events_pie_chart.return }}
      - name: Create Plot Widget for Patrol Events
        id: patrol_events_pie_chart_widgets
        task: create_plot_widget_single_view
        partial:
          title: "Patrol Events Pie Chart"
        map:
          argnames: [view, data]
          argvalues: ${{ workflow.pe_pie_chart_html_urls.return }}
      - name: Merge Pie Chart Widget Views
        id: patrol_events_pie_widget_grouped
        task: merge_widget_views
        partial:
          widgets: ${{ workflow.patrol_events_pie_chart_widgets.return }}

  # time density
  - title: Time Density Map
    type: task-group
    description: >-
      Calculate time density from patrol trajectories and display it on a map.
    tasks:
      - name: Calculate Time Density from Trajectory
        id: td
        task: calculate_time_density
        partial:
          crs: "ESRI:53042"
          percentiles: [50.0, 60.0, 70.0, 80.0, 90.0, 95.0, 99.999]
          nodata_value: "nan"
          band_count: 1
        mapvalues:
          argnames: trajectory_gdf
          argvalues: ${{ workflow.split_patrol_traj_groups.return }}
      # Colormap time density
      - name: Time Density Colormap
        id: td_colormap
        task: apply_color_map
        partial:
          df: ${{ workflow.td.return }}
          input_column_name: "percentile"
          colormap: "RdYlGn"
          output_column_name: "percentile_colormap"
        mapvalues:
          argnames: df
          argvalues: ${{ workflow.td.return }}
      - name: Rename patrol traj columns for map tooltip display
        id: patrol_td_rename_columns
        task: map_columns
        partial:
          drop_columns: []
          retain_columns: []
          rename_columns:
            percentile: "Percentile"
        mapvalues:
          argnames: df
          argvalues: ${{ workflow.td_colormap.return }}
      - name: Create map layer from Time Density
        id: td_map_layer
        task: create_polygon_layer
        partial:
          layer_style:
            fill_color_column: "percentile_colormap"
            opacity: 0.7
            get_line_width: 0
          legend:
            label_column: "Percentile"
            color_column: "percentile_colormap"
          tooltip_columns: ["Percentile"]
        mapvalues:
          argnames: geodataframe
          argvalues: ${{ workflow.patrol_td_rename_columns.return }}
      - name: Draw Ecomap from Time Density
        id: td_ecomap
        task: draw_ecomap
        partial:
          tile_layers: ${{ workflow.base_map_defs.return }}
          north_arrow_style:
            placement: "top-left"
          legend_style:
            placement: "bottom-right"
          static: false
          title: null
          max_zoom: 20
        mapvalues:
          argnames: geo_layers
          argvalues: ${{ workflow.td_map_layer.return }}
      - name: Persist Ecomap as Text
        id: td_ecomap_html_url
        task: persist_text
        partial:
          root_path: ${{ env.ECOSCOPE_WORKFLOWS_RESULTS }}
        mapvalues:
          argnames: text
          argvalues: ${{ workflow.td_ecomap.return }}
      - name: Create Time Density Map Widget
        id: td_map_widget
        task: create_map_widget_single_view
        partial:
          title: "Time Density Map"
        map:
          argnames: [view, data]
          argvalues: ${{ workflow.td_ecomap_html_url.return }}
      - name: Merge Time Density Map Widget Views
        id: td_grouped_map_widget
        task: merge_widget_views
        partial:
          widgets: ${{ workflow.td_map_widget.return }}

  # dashboard
  - name: Create Dashboard with Patrol Map Widgets
    id: patrol_dashboard
    task: gather_dashboard
    partial:
      details: ${{ workflow.workflow_details.return}}
      widgets:
        - ${{ workflow.traj_pe_grouped_map_widget.return }}
        - ${{ workflow.td_grouped_map_widget.return }}
        - ${{ workflow.grouped_bar_plot_widget_merge.return }}
        - ${{ workflow.patrol_events_pie_widget_grouped.return }}
        - ${{ workflow.total_patrols_grouped_sv_widget.return }}
        - ${{ workflow.patrol_time_grouped_widget.return }}
        - ${{ workflow.patrol_dist_grouped_widget.return }}
        - ${{ workflow.avg_speed_grouped_widget.return }}
        - ${{ workflow.max_speed_grouped_widget.return }}
      groupers: ${{ workflow.groupers.return }}
      time_range: ${{ workflow.time_range.return}}
